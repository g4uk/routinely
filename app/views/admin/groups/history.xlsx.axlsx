xlsx_package.workbook.add_worksheet(name: @group.name) do |sheet|

  sheet.add_row([
    "",
    "",
    "",
    "Name",
    "Description",
    "Starts at",
    "Ends at",
    "Duration",
    "Repeats at",
    "Active",
    "Once",
    "Triggers(started) count",
    "Triggers(triggered) count",
    "Triggers(ended) count",
  ])

  @routines.each do |routine|
    previous_version = routine.versions.last

    sheet.add_row([
      previous_version.created_at,
      previous_version.event,
      routine.id,
      routine.name,
      routine.description,
      routine.starts_at.try(:to_formatted_s, :time),
      routine.ends_at.try(:to_formatted_s, :time),
      routine.duration,
      routine.repeats_at,
      routine.active,
      routine.once,
      routine.triggers.started.where("created_at >= ?", previous_version.created_at).count,
      routine.triggers.triggered.where("created_at >= ?", previous_version.created_at).count,
      routine.triggers.ended.where("created_at >= ?", previous_version.created_at).count,
    ])

    routine.versions.reverse.each_cons(2) do |to, from|
      changed = to.reify

      sheet.add_row([
        from.created_at,
        from.event,
        routine.id,
        changed.name,
        changed.description,
        changed.starts_at.try(:to_formatted_s, :time),
        changed.ends_at.try(:to_formatted_s, :time),
        changed.duration,
        changed.repeats_at,
        changed.active,
        changed.once,
        changed.triggers.started.where(created_at: from.created_at..to.created_at).count,
        changed.triggers.triggered.where(created_at: from.created_at..to.created_at).count,
        changed.triggers.ended.where(created_at: from.created_at..to.created_at).count,
      ])
    end
  end
end
